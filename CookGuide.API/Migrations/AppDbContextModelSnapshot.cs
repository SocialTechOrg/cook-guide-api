// <auto-generated />
using CookGuide.API.Shared.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookGuide.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CookGuide.API.Accounts.Domain.Models.Accounts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<bool>("userType")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("user_type");

                    b.HasKey("id")
                        .HasName("pk_accounts");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("CookGuide.API.Ingredients.Domain.Models.Ingredients", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("nutrients")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nutrients");

                    b.Property<string>("other_names")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("other_names");

                    b.HasKey("id")
                        .HasName("pk_ingredients");

                    b.ToTable("ingredients", (string)null);
                });

            modelBuilder.Entity("CookGuide.API.Recipes.Domain.Models.Recipes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("accountid")
                        .HasColumnType("int")
                        .HasColumnName("accountid");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("category");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("num_portions")
                        .HasColumnType("int")
                        .HasColumnName("num_portions");

                    b.Property<int>("userId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_recipes");

                    b.HasIndex("accountid")
                        .HasDatabaseName("ix_recipes_accountid");

                    b.ToTable("recipes", (string)null);
                });

            modelBuilder.Entity("CookGuide.API.Recipes.Domain.Models.RecipesIngredients", b =>
                {
                    b.Property<int>("recipeId")
                        .HasColumnType("int")
                        .HasColumnName("recipe_id");

                    b.Property<int>("ingredientId")
                        .HasColumnType("int")
                        .HasColumnName("ingredient_id");

                    b.HasKey("recipeId", "ingredientId")
                        .HasName("pk_recipes_ingredients");

                    b.HasIndex("ingredientId")
                        .HasDatabaseName("ix_recipes_ingredients_ingredient_id");

                    b.ToTable("recipes_ingredients", (string)null);
                });

            modelBuilder.Entity("CookGuide.API.Recipes.Domain.Models.Recipes", b =>
                {
                    b.HasOne("CookGuide.API.Accounts.Domain.Models.Accounts", "account")
                        .WithMany("recipes")
                        .HasForeignKey("accountid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_recipes_accounts_accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("CookGuide.API.Recipes.Domain.Models.RecipesIngredients", b =>
                {
                    b.HasOne("CookGuide.API.Ingredients.Domain.Models.Ingredients", "ingredient")
                        .WithMany("recipes")
                        .HasForeignKey("ingredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_recipes_ingredients_ingredients_ingredient_id");

                    b.HasOne("CookGuide.API.Recipes.Domain.Models.Recipes", "recipe")
                        .WithMany("ingredients")
                        .HasForeignKey("recipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_recipes_ingredients_recipes_recipe_id");

                    b.Navigation("ingredient");

                    b.Navigation("recipe");
                });

            modelBuilder.Entity("CookGuide.API.Accounts.Domain.Models.Accounts", b =>
                {
                    b.Navigation("recipes");
                });

            modelBuilder.Entity("CookGuide.API.Ingredients.Domain.Models.Ingredients", b =>
                {
                    b.Navigation("recipes");
                });

            modelBuilder.Entity("CookGuide.API.Recipes.Domain.Models.Recipes", b =>
                {
                    b.Navigation("ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
